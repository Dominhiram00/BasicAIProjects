{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOBMBgNqW1orWYjD3SuNMBP"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Job Scheduler by Hiram Dominguez and Jessie Li"],"metadata":{"id":"AZcNlUM8jzR2"}},{"cell_type":"code","source":["#Job and Operation structure setup\n","import numpy as np\n","import random\n","import math\n","\n","def generate_jobs(N_jobs, N_ops, N_machines):\n","    jobs = []\n","    for job_id in range(N_jobs):\n","        operations = [{'machine': f'Machine{random.randint(1, N_machines)}', 'duration': random.randint(5, 50)} for _ in range(N_ops)]\n","        jobs.append({'id': f'Job{job_id}', 'operations': operations})\n","    return jobs"],"metadata":{"id":"XhHTUf8wDT_u","executionInfo":{"status":"ok","timestamp":1710961123050,"user_tz":300,"elapsed":378,"user":{"displayName":"Hiram Dominguez","userId":"00892545507298463606"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["def random_permutation(N):\n","    return np.random.permutation(N).tolist()\n","\n","def successor(current_job_sched, N):\n","    next_job_sched = current_job_sched.copy()\n","    i, j = random.sample(range(N), 2)\n","    next_job_sched[i], next_job_sched[j] = next_job_sched[j], next_job_sched[i]\n","    return next_job_sched\n","\n","def allocate_ops_to_machines(jobs, current_job_sched, N_machines):\n","    machine_schedule = {f'Machine{i+1}': [] for i in range(N_machines)}\n","    machine_end_times = {f'Machine{i+1}': 0 for i in range(N_machines)}\n","\n","    for job_id in current_job_sched:\n","        job = jobs[job_id]\n","        for op in job['operations']:\n","            machine = op['machine']\n","            duration = op['duration']\n","            start_time = machine_end_times[machine]\n","            end_time = start_time + duration\n","\n","            machine_schedule[machine].append((job['id'], start_time, end_time))\n","            machine_end_times[machine] = end_time\n","\n","    return machine_schedule\n","\n","def comp_makespan(machine_schedule):\n","    m_span = max(end_time for machine_ops in machine_schedule.values() for _, _, end_time in machine_ops)\n","    return m_span"],"metadata":{"id":"Tpiwp1e_EA2B","executionInfo":{"status":"ok","timestamp":1710961123203,"user_tz":300,"elapsed":1,"user":{"displayName":"Hiram Dominguez","userId":"00892545507298463606"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["def simulated_annealing(jobs, N_machines, T=1000, max_iter=400, cooling_rate=0.99):\n","    N_jobs = len(jobs)\n","    current_job_sched = random_permutation(N_jobs)\n","    current_opt_sched = allocate_ops_to_machines(jobs, current_job_sched, N_machines)\n","    current_makespan = comp_makespan(current_opt_sched)\n","\n","    for i in range(max_iter):\n","        next_job_sched = successor(current_job_sched, N_jobs)\n","        next_opt_sched = allocate_ops_to_machines(jobs, next_job_sched, N_machines)\n","        next_makespan = comp_makespan(next_opt_sched)\n","\n","        deltaE = next_makespan - current_makespan\n","        if deltaE < 0 or math.exp(-deltaE / T) > random.random():\n","            current_job_sched, current_makespan = next_job_sched, next_makespan\n","\n","        T *= cooling_rate\n","\n","    return current_job_sched, current_makespan"],"metadata":{"id":"PzVj1dLtjI0H","executionInfo":{"status":"ok","timestamp":1710961123887,"user_tz":300,"elapsed":2,"user":{"displayName":"Hiram Dominguez","userId":"00892545507298463606"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["#R3\n","\n","N_jobs = 10\n","N_ops_per_job = 2  #Number of operations per job\n","N_machines = 3\n","\n","\n","jobs_r3 = generate_jobs(N_jobs, N_ops_per_job, N_machines)\n","best_schedule_r3, best_makespan_r3 = simulated_annealing(jobs_r3, N_machines)\n","\n","\n","print(f\"R3: Best schedule: {best_schedule_r3}\\nR3: Best makespan: {best_makespan_r3}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"iDV7QnY6ruI-","executionInfo":{"status":"ok","timestamp":1710961124614,"user_tz":300,"elapsed":3,"user":{"displayName":"Hiram Dominguez","userId":"00892545507298463606"}},"outputId":"e3109ffe-429e-41ac-f824-1c268f85df00"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["R3: Best schedule: [9, 1, 4, 8, 5, 7, 6, 3, 0, 2]\n","R3: Best makespan: 159\n"]}]},{"cell_type":"code","source":["#R4\n","\n","N_jobs = 50\n","N_ops_per_job = 3  # Assuming 3 operations per job as per requirement\n","N_machines = 5  # Scheduling to 5 machines\n","\n","\n","jobs_r4 = generate_jobs(N_jobs, N_ops_per_job, N_machines)\n","\n","\n","best_schedule_r4, best_makespan_r4 = simulated_annealing(jobs_r4, N_machines)\n","\n","# Print results for R4\n","print(f\"R4: Optimized solution makespan: {best_makespan_r4}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"RzTUPxg3OLMs","executionInfo":{"status":"ok","timestamp":1710961697614,"user_tz":300,"elapsed":131,"user":{"displayName":"Hiram Dominguez","userId":"00892545507298463606"}},"outputId":"df40e28d-051f-478b-e6b9-708e60f23b20"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["R4: Optimized solution makespan: 1021\n"]}]},{"cell_type":"code","source":["#R5\n","\n","N_jobs = 50\n","N_ops_per_job = 5\n","N_machines = 3\n","\n","\n","jobs_r5 = generate_jobs(N_jobs, N_ops_per_job, N_machines)\n","\n","\n","best_schedule_r5, best_makespan_r5 = simulated_annealing(jobs_r5, N_machines)\n","\n","\n","print(f\"R5: Optimized solution makespan: {best_makespan_r5}\\nR5: Best schedule: {best_schedule_r5}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"5FNKp1jyORtu","executionInfo":{"status":"ok","timestamp":1710961689313,"user_tz":300,"elapsed":143,"user":{"displayName":"Hiram Dominguez","userId":"00892545507298463606"}},"outputId":"c5f9ea66-e13c-4877-9fff-7897abf97c8c"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["R5: Optimized solution makespan: 2384\n","R5: Best schedule: [3, 32, 34, 10, 4, 42, 31, 11, 28, 37, 49, 48, 24, 21, 30, 2, 27, 20, 39, 9, 13, 38, 8, 26, 6, 41, 5, 40, 36, 0, 14, 17, 12, 45, 1, 18, 44, 16, 47, 43, 23, 7, 29, 33, 19, 22, 46, 15, 25, 35]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"VOr7DAt9OmIQ","executionInfo":{"status":"ok","timestamp":1710961653007,"user_tz":300,"elapsed":209,"user":{"displayName":"Hiram Dominguez","userId":"00892545507298463606"}}},"execution_count":30,"outputs":[]}]}